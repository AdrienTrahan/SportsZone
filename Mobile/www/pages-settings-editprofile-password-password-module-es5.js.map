{"version":3,"sources":["webpack:///src/app/pages/settings/editprofile/password/password.page.html","webpack:///src/app/functions/call.ts","webpack:///src/app/functions/serializer.ts","webpack:///src/app/pages/settings/editprofile/password/password-routing.module.ts","webpack:///src/app/pages/settings/editprofile/password/password.module.ts","webpack:///src/app/pages/settings/editprofile/password/password.page.scss","webpack:///src/app/pages/settings/editprofile/password/password.page.ts"],"names":["call","url","object","Promise","resolve","request","XMLHttpRequest","onreadystatechange","readyState","status","responseText","setTimeout","complete","open","token","console","log","setRequestHeader","send","response","post","upload","imagePath","http","transfer","result","fileTransfer","create","uploadOpts","fileKey","httpMethod","fileName","Date","getTime","Math","random","chunkedMode","headers","auth","then","data","err","logout","serialize","obj","str","key","encodeURIComponent","routes","path","component","PasswordPageRoutingModule","imports","forChild","exports","PasswordPageModule","declarations","PasswordPage","translate","router","alertController","location","old","confirm","cssClass","header","instant","message","error","buttons","text","handler","alert","present","back","selector","template"],"mappings":"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","file":"pages-settings-editprofile-password-password-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"navbar-theme\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"{{'SETTINGS.CHANGEPASSWORD.BACKTITLE' | translate}}\\\" color=\\\"light\\\" defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"white\\\">{{\\\"SETTINGS.CHANGEPASSWORD.TITLE\\\" | translate}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\" class=\\\"\\\">\\n        <ion-icon color=\\\"white\\\" name=\\\"save-outline\\\" ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.CHANGEPASSWORD.0\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"old\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.CHANGEPASSWORD.1\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"new\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.CHANGEPASSWORD.2\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"confirm\\\"></ion-input>\\n  </ion-item>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { serialize } from './serializer';\nimport { get, remove } from './storage';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\n\n\nexport async function call(url, object): Promise<string>{\n    let response = await new Promise((resolve) => { \n        let request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.readyState == 4 && request.status == 200){\n                resolve(request.responseText);\n            }else{\n                setTimeout(() => {\n                    resolve(\"error\")\n                }, 1000)\n            }\n        }\n        let complete = url;\n        if (object != {}){\n            complete += \"?\" + serialize(object);\n        }\n\n        request.open(\"GET\", complete);\n        if (object.token){\n            console.log(object.token);\n            \n            request.setRequestHeader(\"Auth\", object.token);\n            delete object.token;\n        }\n        request.send();\n    });\n    return response as string;\n}\nexport async function post(url, object): Promise<string>{\n    let response = await new Promise((resolve) => { \n        let request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.readyState == 4 && request.status == 200){\n                resolve(request.responseText);\n            }\n        }\n        request.open(\"POST\", url + \"?\" + serialize(object));\n\n        if (object.token){\n            request.setRequestHeader(\"auth\", object.token);\n            delete object.token;\n        }\n        request.send(null);\n    });\n    return response as string;\n}\n    \nexport async function upload(url, imagePath, object, http, transfer): Promise<string>{\n    let response = await new Promise(async (resolve) => { \n        if (imagePath == \"\"){\n            let result = await post(url, object);\n            resolve(result)\n        }else{\n            const fileTransfer: FileTransferObject = transfer.create();\n            const uploadOpts: FileUploadOptions = {\n                fileKey: 'image',\n                httpMethod:'POST',\n                fileName: new Date().getTime() + Math.random() + Math.random() + \".jpg\",\n                chunkedMode: false,\n            };\n            if (object.token){\n                uploadOpts.headers = {auth: object.token};\n                delete object.token;\n            }\n            fileTransfer.upload(imagePath, url + \"?\" + serialize(object), uploadOpts).then((data) => {\n                if (data.response){\n                    resolve(data.response);\n                }\n            }, (err) => {\n                resolve(err);\n            });\n        }\n    });\n    return response as string;\n}\n\nexport async function logout(){\n    let token = await get(\"token\");\n    await call(\"http://192.168.2.251:3000/api/logout\", {token: token});\n    await remove(\"token\");\n    await remove(\"role\");\n}","export function serialize(obj){\n    var str = \"\";\n    for (var key in obj) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(obj[key]);\n    }\n    return str;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordPage } from './password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordPageRoutingModule } from './password-routing.module';\n\nimport { PasswordPage } from './password.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PasswordPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2VkaXRwcm9maWxlL3Bhc3N3b3JkL3Bhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { call } from 'src/app/functions/call';\nimport { get } from 'src/app/functions/storage';\nimport { Location } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.page.html',\n  styleUrls: ['./password.page.scss'],\n})\nexport class PasswordPage implements OnInit {\n  old = \"\";\n  new = \"\";\n  confirm = \"\";\n  constructor(private translate: TranslateService, private router: Router,private alertController: AlertController, private location: Location) { }\n\n  ngOnInit() {\n  }\n  async save(){\n    if (this.confirm != this.new){\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: this.translate.instant(\"ALERTS.6.TITLE\"),\n        message: this.translate.instant(\"ALERTS.6.MESSAGE\", {error: 'New passwords do not match'}),\n        buttons: [{\n            text: this.translate.instant(\"ALERTS.6.BUTTONS.0\"),\n            handler: () => {\n              console.log('Confirm Okay');\n            }\n          }\n        ]\n      });\n  \n      await alert.present();\n      return;\n    }\n    let token = await get(\"token\");\n    let result : any = await call(\"http://192.168.2.251:3000/api/modifyPassword\", {\n      token: token,\n      old: this.old,\n      new: this.new \n    });\n    this.location.back();\n  }\n\n}\n"]}