{"version":3,"sources":["webpack:///src/app/pages/passwordreset/passwordreset.page.html","webpack:///src/app/functions/call.ts","webpack:///src/app/functions/serializer.ts","webpack:///src/app/pages/passwordreset/passwordreset-routing.module.ts","webpack:///src/app/pages/passwordreset/passwordreset.module.ts","webpack:///src/app/pages/passwordreset/passwordreset.page.scss","webpack:///src/app/pages/passwordreset/passwordreset.page.ts"],"names":["call","url","object","Promise","resolve","request","XMLHttpRequest","onreadystatechange","readyState","status","responseText","setTimeout","complete","open","token","console","log","setRequestHeader","send","response","post","upload","imagePath","http","transfer","result","fileTransfer","create","uploadOpts","fileKey","httpMethod","fileName","Date","getTime","Math","random","chunkedMode","headers","auth","then","data","err","logout","serialize","obj","str","key","encodeURIComponent","routes","path","component","PasswordresetPageRoutingModule","imports","forChild","exports","PasswordresetPageModule","declarations","PasswordresetPage","translate","alertController","router","route","error","email","disabled","queryParams","subscribe","navigateByUrl","test","cssClass","header","instant","message","buttons","alert","present","selector","template"],"mappings":"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","file":"pages-passwordreset-passwordreset-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"navbar-theme\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"back()\\\">\\n          <ion-icon color=\\\"white\\\" name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"white\\\">{{\\\"PASSWORDRESET.TITLE\\\" | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <h1 class=\\\"instructions\\\">{{\\\"PASSWORDRESET.DESCRIPTION\\\" | translate}}</h1>\\n  <input [(ngModel)]=\\\"this.email\\\" type=\\\"text\\\" placeholder=\\\"{{'PASSWORDRESET.TITLE' | translate}}\\\" class=\\\"emailInput\\\">\\n  <h2 class=\\\"error\\\" *ngIf=\\\"this.error != ''\\\">{{error}}</h2>\\n  <ion-button class=\\\"sendbutton\\\" expand=\\\"block\\\" (click)=\\\"finish()\\\">{{\\\"PASSWORDRESET.SEND\\\" | translate}}</ion-button>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { serialize } from './serializer';\nimport { get, remove } from './storage';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\n\n\nexport async function call(url, object): Promise<string>{\n    let response = await new Promise((resolve) => { \n        let request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.readyState == 4 && request.status == 200){\n                resolve(request.responseText);\n            }else{\n                setTimeout(() => {\n                    resolve(\"error\")\n                }, 1000)\n            }\n        }\n        let complete = url;\n        if (object != {}){\n            complete += \"?\" + serialize(object);\n        }\n\n        request.open(\"GET\", complete);\n        if (object.token){\n            console.log(object.token);\n            \n            request.setRequestHeader(\"Auth\", object.token);\n            delete object.token;\n        }\n        request.send();\n    });\n    return response as string;\n}\nexport async function post(url, object): Promise<string>{\n    let response = await new Promise((resolve) => { \n        let request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.readyState == 4 && request.status == 200){\n                resolve(request.responseText);\n            }\n        }\n        request.open(\"POST\", url + \"?\" + serialize(object));\n\n        if (object.token){\n            request.setRequestHeader(\"auth\", object.token);\n            delete object.token;\n        }\n        request.send(null);\n    });\n    return response as string;\n}\n    \nexport async function upload(url, imagePath, object, http, transfer): Promise<string>{\n    let response = await new Promise(async (resolve) => { \n        if (imagePath == \"\"){\n            let result = await post(url, object);\n            resolve(result)\n        }else{\n            const fileTransfer: FileTransferObject = transfer.create();\n            const uploadOpts: FileUploadOptions = {\n                fileKey: 'image',\n                httpMethod:'POST',\n                fileName: new Date().getTime() + Math.random() + Math.random() + \".jpg\",\n                chunkedMode: false,\n            };\n            if (object.token){\n                uploadOpts.headers = {auth: object.token};\n                delete object.token;\n            }\n            fileTransfer.upload(imagePath, url + \"?\" + serialize(object), uploadOpts).then((data) => {\n                if (data.response){\n                    resolve(data.response);\n                }\n            }, (err) => {\n                resolve(err);\n            });\n        }\n    });\n    return response as string;\n}\n\nexport async function logout(){\n    let token = await get(\"token\");\n    await call(\"http://192.168.2.251:3000/api/logout\", {token: token});\n    await remove(\"token\");\n    await remove(\"role\");\n}","export function serialize(obj){\n    var str = \"\";\n    for (var key in obj) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(obj[key]);\n    }\n    return str;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordresetPage } from './passwordreset.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordresetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordresetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordresetPageRoutingModule } from './passwordreset-routing.module';\n\nimport { PasswordresetPage } from './passwordreset.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PasswordresetPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [PasswordresetPage]\n})\nexport class PasswordresetPageModule {}\n","export default \".emailInput {\\n  position: relative;\\n  margin: 20px;\\n  height: 50px;\\n  background-color: #f1f1f1;\\n  border: none;\\n  outline: none;\\n  width: calc(100% - 40px);\\n  max-width: 300px;\\n  border-radius: 4px;\\n  padding: 10px;\\n}\\n\\n.sendbutton {\\n  margin: 20px;\\n  --background: #25E481;\\n}\\n\\n.instructions {\\n  font-family: Poppins;\\n  font-size: 15px;\\n  color: gray;\\n  margin: 20px 20px 0px 20px;\\n}\\n\\n.error {\\n  margin: 0px 20px 10px 20px;\\n  color: red;\\n  font-family: Poppins;\\n  font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZHJpZW50cmFoYW4vRGVza3RvcC9UZWFtY2xhcC9UZWFtQ2xhcC9zcmMvYXBwL3BhZ2VzL3Bhc3N3b3JkcmVzZXQvcGFzc3dvcmRyZXNldC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Bhc3N3b3JkcmVzZXQvcGFzc3dvcmRyZXNldC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7QUNBSjs7QURHQTtFQUtJLFlBQUE7RUFDQSxxQkFBQTtBQ0pKOztBRE9BO0VBQ0ksb0JBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtFQUNBLDBCQUFBO0FDSko7O0FETUE7RUFDSSwwQkFBQTtFQUNBLFVBQUE7RUFDQSxvQkFBQTtFQUNBLGVBQUE7QUNISiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Bhc3N3b3JkcmVzZXQvcGFzc3dvcmRyZXNldC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZW1haWxJbnB1dHtcbiAgICBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uc2VuZGJ1dHRvbntcbiAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLy8gYm90dG9tOiAyMDBweDtcbiAgICAvLyBsZWZ0OiAwcHg7XG4gICAgLy8gd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpO1xuICAgIG1hcmdpbjogMjBweDtcbiAgICAtLWJhY2tncm91bmQ6ICMyNUU0ODE7XG59XG5cbi5pbnN0cnVjdGlvbnN7XG4gICAgZm9udC1mYW1pbHk6IFBvcHBpbnM7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIG1hcmdpbjogMjBweCAyMHB4IDBweCAyMHB4O1xufVxuLmVycm9ye1xuICAgIG1hcmdpbjogMHB4IDIwcHggMTBweCAyMHB4O1xuICAgIGNvbG9yOiByZWQ7XG4gICAgZm9udC1mYW1pbHk6IFBvcHBpbnM7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufSIsIi5lbWFpbElucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDIwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XG4gIG1heC13aWR0aDogMzAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLnNlbmRidXR0b24ge1xuICBtYXJnaW46IDIwcHg7XG4gIC0tYmFja2dyb3VuZDogIzI1RTQ4MTtcbn1cblxuLmluc3RydWN0aW9ucyB7XG4gIGZvbnQtZmFtaWx5OiBQb3BwaW5zO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGNvbG9yOiBncmF5O1xuICBtYXJnaW46IDIwcHggMjBweCAwcHggMjBweDtcbn1cblxuLmVycm9yIHtcbiAgbWFyZ2luOiAwcHggMjBweCAxMHB4IDIwcHg7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtZmFtaWx5OiBQb3BwaW5zO1xuICBmb250LXNpemU6IDEycHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { call, upload, logout } from \"../../functions/call\";\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.page.html',\n  styleUrls: ['./passwordreset.page.scss'],\n})\nexport class PasswordresetPage implements OnInit {\n\n  error = \"\";\n  email = \"\";\n  disabled = false;\n  constructor(private translate: TranslateService, private alertController: AlertController, private router: Router, private route: ActivatedRoute) { \n    route.queryParams.subscribe(async (queryParams) => {\n      if (queryParams.email){\n        this.email = queryParams.email;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n\n  back(){\n    this.router.navigateByUrl(\"/auth\");\n  }\n  async finish(){\n    this.disabled = true;\n    this.error = \"\";\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email))) {\n      this.error = \"email is not valid\";\n      return;\n    }\n    let result = await call(\"http://192.168.2.251:3000/api/resetEmail\", {email: this.email});\n    ;\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: this.translate.instant(\"ALERTS.7.TITLE\"),\n      message: this.translate.instant(\"ALERTS.7.MESSAGE\" + result == \"done\"? \".DONE\" : \".ERROR\", {result: result}),\n      buttons: [this.translate.instant(\"ALERTS.7.BUTTONS.0\")]\n    });\n    alert.present()\n    this.disabled = true;\n\n  }\n}\n"]}