{"version":3,"sources":["webpack:///src/app/pages/settings/editprofile/editprofile.page.html","webpack:///src/app/functions/call.ts","webpack:///src/app/functions/serializer.ts","webpack:///src/app/pages/settings/editprofile/editprofile-routing.module.ts","webpack:///src/app/pages/settings/editprofile/editprofile.module.ts","webpack:///src/app/pages/settings/editprofile/editprofile.page.scss","webpack:///src/app/pages/settings/editprofile/editprofile.page.ts"],"names":["call","url","object","Promise","resolve","request","XMLHttpRequest","onreadystatechange","readyState","status","responseText","setTimeout","complete","open","token","console","log","setRequestHeader","send","response","post","upload","imagePath","http","transfer","result","fileTransfer","create","uploadOpts","fileKey","httpMethod","fileName","Date","getTime","Math","random","chunkedMode","headers","auth","then","data","err","logout","serialize","obj","str","key","encodeURIComponent","routes","path","component","EditprofilePageRoutingModule","imports","forChild","exports","EditprofilePageModule","declarations","EditprofilePage","firstname","lastname","email","unmodified","load","JSON","parse","error","capitalizeFirstLetter","first","last","selector","template","string","charAt","toUpperCase","slice","toLowerCase"],"mappings":"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","file":"pages-settings-editprofile-editprofile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"navbar-theme\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"{{'SETTINGS.ACCOUNTINFO.BACKTITLE' | translate}}\\\" color=\\\"light\\\" defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"white\\\">{{\\\"SETTINGS.ACCOUNTINFO.TITLE\\\" | translate}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button [disabled]='this.firstname == this.unmodified.firstname && this.lastname == this.unmodified.lastname && this.email == this.unmodified.email' (click)=\\\"this.save()\\\" class=\\\"\\\">\\n        <ion-icon color=\\\"white\\\" name=\\\"save-outline\\\" ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.ACCOUNTINFO.0\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"firstname\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.ACCOUNTINFO.1\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"lastname\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.ACCOUNTINFO.2\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"email\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item-divider>\\n    <ion-label>\\n      {{\\\"SETTINGS.ACCOUNTINFO.3\\\" | translate}}\\n    </ion-label>\\n  </ion-item-divider>\\n  <ion-item routerLink=\\\"/password\\\" routerLinkActive=\\\"active\\\" class=\\\"\\\" button color=\\\"primary\\\">\\n    {{\\\"SETTINGS.ACCOUNTINFO.4\\\" | translate}}\\n  </ion-item>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { serialize } from './serializer';\nimport { get, remove } from './storage';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\n\n\nexport async function call(url, object): Promise<string>{\n    let response = await new Promise((resolve) => { \n        let request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.readyState == 4 && request.status == 200){\n                resolve(request.responseText);\n            }else{\n                setTimeout(() => {\n                    resolve(\"error\")\n                }, 1000)\n            }\n        }\n        let complete = url;\n        if (object != {}){\n            complete += \"?\" + serialize(object);\n        }\n\n        request.open(\"GET\", complete);\n        if (object.token){\n            console.log(object.token);\n            \n            request.setRequestHeader(\"Auth\", object.token);\n            delete object.token;\n        }\n        request.send();\n    });\n    return response as string;\n}\nexport async function post(url, object): Promise<string>{\n    let response = await new Promise((resolve) => { \n        let request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.readyState == 4 && request.status == 200){\n                resolve(request.responseText);\n            }\n        }\n        request.open(\"POST\", url + \"?\" + serialize(object));\n\n        if (object.token){\n            request.setRequestHeader(\"auth\", object.token);\n            delete object.token;\n        }\n        request.send(null);\n    });\n    return response as string;\n}\n    \nexport async function upload(url, imagePath, object, http, transfer): Promise<string>{\n    let response = await new Promise(async (resolve) => { \n        if (imagePath == \"\"){\n            let result = await post(url, object);\n            resolve(result)\n        }else{\n            const fileTransfer: FileTransferObject = transfer.create();\n            const uploadOpts: FileUploadOptions = {\n                fileKey: 'image',\n                httpMethod:'POST',\n                fileName: new Date().getTime() + Math.random() + Math.random() + \".jpg\",\n                chunkedMode: false,\n            };\n            if (object.token){\n                uploadOpts.headers = {auth: object.token};\n                delete object.token;\n            }\n            fileTransfer.upload(imagePath, url + \"?\" + serialize(object), uploadOpts).then((data) => {\n                if (data.response){\n                    resolve(data.response);\n                }\n            }, (err) => {\n                resolve(err);\n            });\n        }\n    });\n    return response as string;\n}\n\nexport async function logout(){\n    let token = await get(\"token\");\n    await call(\"http://192.168.2.251:3000/api/logout\", {token: token});\n    await remove(\"token\");\n    await remove(\"role\");\n}","export function serialize(obj){\n    var str = \"\";\n    for (var key in obj) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(obj[key]);\n    }\n    return str;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditprofilePage } from './editprofile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditprofilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditprofilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditprofilePageRoutingModule } from './editprofile-routing.module';\n\nimport { EditprofilePage } from './editprofile.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditprofilePageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [EditprofilePage]\n})\nexport class EditprofilePageModule {}\n","export default \".rightEdit {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZHJpZW50cmFoYW4vRGVza3RvcC9UZWFtY2xhcC9UZWFtQ2xhcC9zcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2VkaXRwcm9maWxlL2VkaXRwcm9maWxlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvc2V0dGluZ3MvZWRpdHByb2ZpbGUvZWRpdHByb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksaUJBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2VkaXRwcm9maWxlL2VkaXRwcm9maWxlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnJpZ2h0RWRpdHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn0iLCIucmlnaHRFZGl0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { call } from 'src/app/functions/call';\nimport { get } from 'src/app/functions/storage';\n\n@Component({\n  selector: 'app-editprofile',\n  templateUrl: './editprofile.page.html',\n  styleUrls: ['./editprofile.page.scss'],\n})\nexport class EditprofilePage implements OnInit {\n\n  firstname = \"\";\n  lastname = \"\";\n  email = \"\";\n  unmodified = {firstname: \"\", lastname: \"\", email: \"\"};\n  constructor() {\n\n    this.load();\n  }\n\n\n  ngOnInit() {\n  }\n  async load(){\n    let token = await get(\"token\");\n    let result : any = await call(\"http://192.168.2.251:3000/api/getAccountInfo\", {\n      token: token\n    });\n    try{\n      result = JSON.parse(result);\n      if ((result as any).error){throw (result as any).error;};\n      this.firstname = capitalizeFirstLetter(result.first);\n      this.lastname = capitalizeFirstLetter(result.last);\n      this.email = capitalizeFirstLetter(result.email);\n\n      this.unmodified = {firstname: this.firstname, lastname: this.lastname, email: this.email};\n    }catch(error){\n    }\n    \n  }\n  async save(){\n    let token = await get(\"token\");\n    let obj : any = {token: token};\n    if (this.firstname != this.unmodified.firstname){\n      obj.firstname = this.firstname;\n    }\n    if (this.lastname != this.unmodified.lastname){\n      obj.lastname = this.lastname;\n    }\n    if (this.email != this.unmodified.email){\n      obj.email = this.email;\n    }\n    let result : any = await call(\"http://192.168.2.251:3000/api/setAccountInfo\", obj);\n  }\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}"]}